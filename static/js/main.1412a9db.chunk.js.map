{"version":3,"sources":["stores/Question.js","stores/Pagination.js","stores/index.js","components/Question.js","components/Pagination.js","pages/index.js","components/Header.js","pages/Detailed.js","pages/Add.js","App.js","index.js"],"names":["Owner","types","model","badge_counts","optional","bronze","silver","gold","reputation","user_id","user_type","profile_image","display_name","link","question_id","identifierNumber","title","string","tags","frozen","body","body_markdown","score","number","view_count","answer_count","owner","maybe","views","self","length","substring","Math","min","actions","afterCreate","scoreUp","scoreDown","pageLength","page","limit","max","parseInt","getParent","questions","floor","offset","diff","Array","from","map","d","i","getQuestions","start","end","filter","setPage","store","array","Question","pagination","Pagination","create","fetchQuestionsAPI","applySnapshot","MockQuestions","items","getQuestion","id","find","addQuestion","data","unshift","StoreContext","React","createContext","Provider","useMst","useContext","Error","observer","props","history","useHistory","useParams","body255","data-cy","className","onClick","href","e","preventDefault","push","dangerouslySetInnerHTML","__html","key","height","src","alt","target","rel","pages","Fragment","disabled","loading","useEffect","window","scrollTo","type","Header","useState","setTitle","setBody","setTags","onSubmit","random","split","htmlFor","required","name","placeholder","onChange","value","maxLength","rows","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1412a9db.chunk.js","sourcesContent":["import { types } from 'mobx-state-tree';\n\nconst Owner = types.model({\n    badge_counts: types.optional(types.model({\n        bronze: 0,\n        silver: 0,\n        gold: 0\n    }), {}),\n    reputation: 0,\n    user_id: 0,\n    user_type: '',\n    profile_image: '',\n    display_name: '',\n    link: ''\n});\n\nexport default types.model({\n    question_id: types.identifierNumber,\n    title: types.optional(types.string, ''),\n    tags: types.frozen(),\n    body: types.optional(types.string, ''),\n    body_markdown: types.optional(types.string, ''),\n    score: types.optional(types.number, 0),\n    view_count: types.optional(types.number, 0),\n    answer_count: types.optional(types.number, 0),\n    owner: types.maybe(Owner),\n}).views(self => ({\n    get body255() {\n        return self.body.length > 255 ? self.body_markdown.substring(0, Math.min(self.body_markdown.length, 255)) + ' ...' : self.body_markdown;\n    }\n})).actions(self => ({\n    afterCreate() {\n\n    },\n    scoreUp() {\n        self.score = self.score + 1;\n    },\n    scoreDown() {\n        self.score = self.score - 1;\n    }\n}));","import { types, getParent } from 'mobx-state-tree';\n\nexport default types.model({\n    min: types.optional(types.number, 1),\n    pageLength: types.optional(types.number, 5),\n    page: types.optional(types.number, 1),\n    limit: types.optional(types.number, 15)\n}).views(self => ({\n    // get page() {\n    //     return getParent(self).params.page ? parseInt(getParent(self).params.page, 10) : 1;\n    // },\n    get max() {\n        const max = parseInt(getParent(self).questions.length / self.limit, 10);\n        return getParent(self).questions.length % self.limit > 0 ? max + 1 : max;\n    },\n    get diff() {\n        return Math.floor(self.pageLength / 2);\n    },\n    get offset() {\n        let offset = self.page - self.diff;\n        if (offset < self.min) offset = self.min;\n        if (self.page + self.diff >= self.max) offset = self.max - (self.diff * 2);\n        if (self.max < self.pageLength) offset = self.min;\n        return offset;\n    },\n    get pages() {\n        return Array.from({ length: self.max > self.pageLength ? self.pageLength : self.max }).map((d, i) => i + self.offset);\n    }\n})).actions(self => ({\n    getQuestions() {\n        const start = (self.page - 1) * self.limit;\n        const end = start + self.limit;\n        return getParent(self).questions.filter((d, i) => i >= start && i < end);\n    },\n    setPage(page) {\n        self.page = page;\n    }\n}));","import React from 'react';\nimport { types, applySnapshot } from 'mobx-state-tree';\nimport Question from './Question';\nimport MockQuestions from 'mock-api/questions.json';\nimport Pagination from './Pagination';\n\nconst Store = types.model({\n    questions: types.array(Question, []),\n    pagination: types.maybe(Pagination)\n}).views(() => ({\n\n})).actions(self => ({\n    afterCreate() {\n        self.pagination = Pagination.create();\n    },\n    fetchQuestionsAPI() {\n        applySnapshot(self.questions, MockQuestions.items);\n    },\n    getQuestion(id) {\n        return self.questions.find(d => d.question_id === parseInt(id), 10);\n    },\n    addQuestion(data) {\n        self.questions.unshift(data);\n    }\n}));\n\n/**\n * thinking of moving below code to custom hooks\n */\n\nexport const store = Store.create();\n\nconst StoreContext = React.createContext();\n\nexport const Provider = StoreContext.Provider;\n\nexport function useMst() {\n    const store = React.useContext(StoreContext);\n    if (store === null) throw new Error('Store cannot be null, please add a context provider');\n    return store;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst Question = (props) => {\n    const history = useHistory();\n    const { id } = useParams();\n    const { data } = props;\n    const { title, body, score, tags, owner, answer_count, view_count, question_id, body255 } = data;\n    const onClick = e => {\n        e.preventDefault();\n        history.push(`/${question_id}`);\n    };\n    return <article data-cy=\"question\" className=\"row border-bottom mb-3 pb-3\">\n        <div data-cy=\"status\" className=\"col-4 col-sm-auto text-center\">\n            <div>\n                <button data-cy=\"score-up\" className=\"btn btn-sm btn-light\" onClick={() => data.scoreUp()}><i className=\"fa fa-caret-up\"></i></button>\n                <div> <span className=\"badge badge-warning\"><span data-cy=\"score\">{score}</span> votes</span> </div>\n                <button data-cy=\"score-down\" className=\"btn btn-sm btn-light\" onClick={() => data.scoreDown()}><i className=\"fa fa-caret-down\"></i></button>\n            </div>\n            <div>\n                <div><span className=\"badge badge-light\">{answer_count}</span> answers</div>\n            </div>\n            <div><span className=\"badge badge-light\">{view_count}</span> views</div>\n        </div>\n        <div data-cy=\"information\" className=\"col-8 col-sm \">\n            <a href=\"\" data-cy=\"click-to-detail\" className=\"overflow-hidden\" onClick={onClick}>{title}</a>\n            <div data-cy=\"body\" className=\"overflow-hidden\" dangerouslySetInnerHTML={{ __html: id ? body : body255 }} />\n            {/* <div data-cy=\"body\" className=\"overflow-hidden\">{body255}</div> */}\n            <div data-cy=\"tags\" className=\"mb-3\">\n                {tags.map((d, i) => <span key={i} className=\"badge badge-info mr-1\">{d}</span>)}\n            </div>\n            {owner && <div className=\"row text-right\">\n                <div className=\"col p-0\"><img height=\"32\" src={`${owner.profile_image ? owner.profile_image : 'https://via.placeholder.com/32'}`} alt=\"\" /></div>\n                <div className=\"col-auto\">\n                    <div>asked 0 mins ago</div>\n                    <a data-cy=\"owner-name\" target=\"_blank\" rel=\"noopener noreferrer\" href={owner.link}>{owner.display_name}</a>\n                    <div>\n                        <span className=\"badge badge-danger mr-1\">{owner.badge_counts.gold}</span>\n                        <span className=\"badge badge-light mr-1\">{owner.badge_counts.silver}</span>\n                        <span className=\"badge badge-warning mr-1\">{owner.badge_counts.bronze}</span>\n                    </div>\n                </div>\n            </div>}\n        </div>\n    </article>;\n};\n\nQuestion.propTypes = {\n    data: PropTypes.object\n};\n\nexport default observer(Question);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\n\nconst Pagination = props => {\n    const { store } = props;\n    const { page, max, min, pages } = store.pagination;\n    \n    const onClick = i => () => {\n        store.pagination.setPage(i);\n        // store.params.setParamsByField('page', i.toString());\n        // store.fetchAPI();\n    };\n\n    return <React.Fragment>\n        <nav data-cy=\"pagination\">\n            <ul className=\"pagination justify-content-center table-responsive\">\n                <li className=\"page-item\"><button disabled={store.loading} className=\"page-link\" onClick={onClick(1)}><i className=\"fa fa-angle-double-left\"></i></button></li>\n                <li className=\"page-item\"><button disabled={store.loading} className=\"page-link\" onClick={onClick(page - 1 < min ? min : page - 1)}><i className=\"fa fa-angle-left\"></i></button></li>\n                {pages.map((d, i) => <li key={i} className={`page-item ${page === d ? 'active' : ''}`}><button disabled={store.loading} className=\"page-link\" onClick={onClick(d)}>{d}</button></li>)}\n                <li className=\"page-item\"><button disabled={store.loading} className=\"page-link\" onClick={onClick(page + 1 > max ? max : page + 1)}><i className=\"fa fa-angle-right\"></i></button></li>\n                <li className=\"page-item\"><button disabled={store.loading} className=\"page-link\" onClick={onClick(max)}><i className=\"fa fa-angle-double-right\"></i></button></li>\n            </ul>\n        </nav>\n    </React.Fragment >;\n};\n\nPagination.propTypes = {\n    store: PropTypes.object\n};\n\nexport default observer(Pagination);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport Question from 'components/Question';\nimport { useHistory } from 'react-router-dom';\nimport Pagination from 'components/Pagination';\n\nconst List = props => {\n    const { store } = props;\n    const { pagination } = store;\n    React.useEffect(() => {\n        window.scrollTo(0, 0);\n        store.pagination.setPage(1);\n        store.questions.length === 0 && store.fetchQuestionsAPI();\n    }, [store]);\n    const history = useHistory();\n\n    return <section data-cy=\"questions\">\n        <header className=\"border-bottom pb-3 mb-3\">\n            <div className=\"row mb-3\">\n                <div className=\"col\">All Questions</div>\n                <div className=\"col-auto\"><div data-cy=\"btn-add-question\" className=\"btn btn-sm btn-primary\" onClick={() => history.push('/add')}>Ask Question</div></div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-sm-auto mb-3 mb-sm-0\">{store.questions.length} questions</div>\n                <div className=\"col-sm\">\n                    <div className=\"row\">\n                        <div className=\"col text-sm-right\">\n                            <div className=\"btn-group\">\n                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary active\">Newest</button>\n                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Active</button>\n                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary d-none d-sm-block\">Bountied <span className=\"badge badge-primary\">123</span></button>\n                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary d-none d-sm-block\">Unanswered </button>\n                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">More <i className=\"fa fa-angle-down\"></i></button>\n                            </div>\n                        </div>\n                        <div className=\"col-auto\">\n                            <div className=\"btn btn-sm btn-info\"><i className=\"fa fa-gear\"></i> Filter</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </header>\n\n        {store.pagination.page && pagination.getQuestions().map((d, i) => <Question key={i} data={d} />)}\n        \n        <Pagination store={store} />\n\n    </section>;\n};\n\nList.propTypes = {\n    store: PropTypes.object\n};\n\nexport default observer(List);","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Header = () => {\n    const history = useHistory();\n    return <header data-cy=\"header\" className=\"border-bottom mb-3 shadow p-3\">\n        <div className=\"btn p-0\" onClick={() => history.push('/')}>\n            <i className=\"fa fa-stack-overflow\"></i> Stack<strong>Overflow</strong> <small>Challenge</small>\n        </div>\n    </header>;\n};\n\nexport default Header;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport Question from 'components/Question';\nimport { useParams } from 'react-router-dom';\n\nconst Detailed = props => {\n    const { store } = props;\n    const { id } = useParams();\n    return <section data-cy=\"questions\">\n        {store.getQuestion(id) ? <Question data={store.getQuestion(id)} /> : <div className=\"alert alert-danger\">Page not Found!</div>}\n    </section>;\n};\n\nDetailed.propTypes = {\n    store: PropTypes.object\n};\n\nexport default observer(Detailed);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { useHistory } from 'react-router-dom';\n\nconst Add = props => {\n    const { store } = props;\n    const history = useHistory();\n    const [title, setTitle] = React.useState('');\n    const [body, setBody] = React.useState('');\n    const [tags, setTags] = React.useState([]);\n    // const [isValidated, setIsValidated] = React.useState(false);\n    const onSubmit = e => {\n        e.preventDefault();\n        // setIsValidated(true);\n        store.addQuestion({\n            question_id: Math.floor(Math.random() * Math.floor(100000000)),\n            ...{title},\n            ...{body},\n            body_markdown: body,\n            tags: tags.split(','),\n            owner: {\n                display_name: 'Francis Samande Declaro',\n                profile_image: 'https://media-exp1.licdn.com/dms/image/C5103AQGkPlmrSWhNkg/profile-displayphoto-shrink_200_200/0?e=1587600000&v=beta&t=S-iaIGYf4nM7dj8675n6-wbL6f3W0ARrC2btnvcTIJA',\n                link: 'https://ph.linkedin.com/in/francis-declaro-22b4366a'\n            }\n        });\n        history.push('/');\n    };\n\n    // const onChange = e => {\n    //     console.log.log(e);\n    // };\n\n    // React.useEffect(() => {\n\n    // }, [isValidated]);\n    return <section data-cy=\"add\">\n        <header className=\"mb-3\">Ask a public question</header>\n        <form data-cy=\"form\" className=\"card shadow\" onSubmit={onSubmit}>\n            <div className=\"card-body was-validated\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Title</label>\n                    <small className=\"form-text text-muted\">Be specific and imagine you&apos;re asking a question to another person</small>\n                    <input data-cy=\"title\" required name=\"title\" placeholder=\"ex. Lorem ipsum dolor sit amet consectetur, adipisicing elit. Odio, sit?\" type=\"text\" className=\"form-control\" onChange={e => setTitle(e.target.value)} value={title} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Body</label>\n                    <small className=\"form-text text-muted\">Include all the information someone would need to answer your question</small>\n                    <textarea data-cy=\"body\" maxLength=\"255\" required name=\"body\" placeholder=\"ex. Lorem ipsum dolor sit, amet consectetur adipisicing elit. Temporibus pariatur dolor impedit nesciunt saepe, consectetur eligendi voluptate obcaecati quasi quae quam libero iure reiciendis tempore. Sequi suscipit adipisci corporis. Rerum.\" rows=\"10\" className=\"form-control\" onChange={e => setBody(e.target.value)} value={body}></textarea>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Tags</label>\n                    <small className=\"form-text text-muted\">Add up to 5 tags to describe what your question is about</small>\n                    <input data-cy=\"tags\" required name=\"tags\" placeholder=\"ex. javacript, react, mobx-state-tree\" type=\"text\" className=\"form-control\" onChange={e => setTags(e.target.value)} value={tags} />\n                </div>\n                <button data-cy=\"btn-submit\" className=\"btn btn-primary\">Submit</button>\n            </div>\n        </form>\n    </section>;\n};\n\nAdd.propTypes = {\n    store: PropTypes.object\n};\n\nexport default observer(Add);","import React from 'react';\nimport { useMst } from 'stores';\nimport {\n    HashRouter as Router,\n    Switch,\n    Route\n    // Link,\n    // useRouteMatch,\n    // useParams\n} from 'react-router-dom';\nimport List from 'pages';\nimport Header from 'components/Header';\nimport Detailed from 'pages/Detailed';\nimport Add from 'pages/Add';\n\nconst App = () => {\n    return <div data-cy=\"app\" className=\"app\">\n        <Router>\n            <Header />\n            <article data-cy=\"main\" className=\"container mb-3\">\n                <Switch>\n                    <Route path=\"/add\">\n                        <Add store={useMst()} />\n                    </Route>\n                    <Route path=\"/:id\">\n                        <Detailed store={useMst()} />\n                    </Route>\n                    <Route path=\"/\">\n                        <List store={useMst()} />\n                    </Route>\n                </Switch>\n            </article>\n        </Router>\n\n        <footer data-cy=\"footer\" className=\"text-center\">\n            <div className=\"card-body bg-dark text-white\"><i className=\"fa fa-stack-overflow\"></i> <small>Stack Overflow:  Front-End / Challenge © 2020 Stock Overflow: exam taken by @Francis Samande Declaro</small></div>\n        </footer>\n    </div>;\n};\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider, store } from 'stores';\nimport { onPatch, onSnapshot } from 'mobx-state-tree';\nimport makeInspectable from 'mobx-devtools-mst';\n\nconst mstDebug = () => {\n    makeInspectable(store);\n    // onPatch(store, patch => console.log(patch));\n    onSnapshot(store, snapshot => console.log('Snapshot: ', snapshot));\n};\n\n// process.env.NODE_ENV === 'development' && mstDebug();\n\nReactDOM.render(<Provider value={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}